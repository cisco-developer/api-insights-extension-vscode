{
  "name": "api-insights",
  "displayName": "API Insights",
  "description": "Monitoring and Improving API Quality",
  "author": "cisco-developer@cisco.com",
  "license": "LICENSE.txt",
  "version": "0.2.1",
  "publisher": "CiscoDeveloper",
  "icon": "logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/cisco-developer/api-insights-extension-vscode"
  },
  "engines": {
    "vscode": "^1.61.0",
    "node": ">12 <16"
  },
  "categories": [
    "Linters"
  ],
  "keywords": [
    "API Insights",
    "oas",
    "openapi"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onFileSystem:API-Insights-readonly",
    "onView:api-insights-sidebar",
    "onView:api-insights-diff-summary",
    "onLanguage:json",
    "onLanguage:yaml"
  ],
  "contributes": {
    "menus": {
      "view/title": [
        {
          "command": "API Insights.configureExplorer",
          "group": "navigation",
          "when": "view == api-insights-sidebar"
        }
      ],
      "editor/title": [
        {
          "command": "API Insights.editFile",
          "group": "navigation",
          "when": "resourceScheme == API-Insights-readonly&&!textCompareEditorVisible"
        },
        {
          "command": "API Insights.saveOnLocal",
          "group": "navigation",
          "when": "(resourceScheme == API-Insights-readonly||resourceScheme == API-Insights)&&!textCompareEditorVisible"
        },
        {
          "command": "API Insights.uploadToCloud",
          "group": "navigation",
          "when": "resourceScheme == API-Insights&&editorLangId == json"
        },
        {
          "command": "API Insights.selectSpecCompareItem",
          "group": "navigation",
          "when": "editorLangId == json&&hasEndpoint"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "api-insights-sidebar-view",
          "title": "API Insights",
          "icon": "./media/api-insights-logo.svg"
        }
      ],
      "panel": [
        {
          "id": "api-insights-diff-summary",
          "title": "API Insights",
          "icon": "./media/api-insights-logo.svg"
        }
      ]
    },
    "views": {
      "api-insights-sidebar-view": [
        {
          "type": "webview",
          "id": "api-insights-sidebar",
          "name": "API Insights",
          "contextualTitle": "API Insights"
        }
      ],
      "api-insights-diff-summary": [
        {
          "type": "webview",
          "id": "api-insights-diff-summary",
          "name": "Diff Summary",
          "contextualTitle": "API Insights"
        }
      ]
    },
    "commands": [
      {
        "command": "API Insights.configureExplorer",
        "title": "Settings",
        "category": "API Insights",
        "icon": "$(settings-gear)"
      },
      {
        "command": "API Insights.editFile",
        "title": "Edit",
        "category": "API Insights",
        "icon": "$(edit)"
      },
      {
        "command": "API Insights.saveOnLocal",
        "title": "Download",
        "category": "API Insights",
        "icon": "$(save-as)"
      },
      {
        "command": "API Insights.uploadToCloud",
        "title": "Upload",
        "category": "API Insights",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "API Insights.editFileWhenSpecDiff",
        "title": "Edit",
        "category": "API Insights",
        "icon": "$(edit)"
      },
      {
        "command": "API Insights.selectSpecCompareItem",
        "title": "Compare",
        "category": "API Insights",
        "icon": "$(diff)"
      }
    ],
    "configuration": [
      {
        "id": "API Insights Configuration",
        "type": "object",
        "title": "API Insights",
        "markdownDescription": "API Insights service endpoint configurations",
        "properties": {
          "API Insights.endpointURL": {
            "title": "API Insights Service URL",
            "scope": "resource",
            "order": 0,
            "type": "string",
            "default": "",
            "markdownDescription": "API Insights service endpoint URL, by specifying the 'https' scheme, e.g., http://localhost:8081/v1/apiregistry/",
            "patternErrorMessage": "Specify the schema http:// or https://",
            "readOnly": true
          },
          "API Insights.auth.type": {
            "title": "Auth Type",
            "markdownDescription": "Auth type",
            "scope": "resource",
            "type": "string",
            "enum": [
              "None",
              "Token",
              "OAuth"
            ],
            "order": 1,
            "default": "None",
            "readOnly": true
          }
        }
      },
      {
        "id": "API InsightsAuthByToken",
        "title": "Auth by Token",
        "properties": {
          "API Insights.auth.token": {
            "type": "object",
            "required": [
              "Token Type"
            ],
            "properties": {
              "Token Type": {
                "type": "string",
                "title": "Token Type (Optional, Bearer, Basic, ...)",
                "description": "Token type used to access API Insights service endpoint"
              },
              "Token Value": {
                "type": "string",
                "title": "Token Value (Optional)",
                "description": "Token value used to access API Insights service endpoint"
              }
            },
            "default": {
              "Token Type": "Bearer",
              "Token Value": ""
            },
            "additionalProperties": false
          }
        }
      },
      {
        "id": "API InsightsAuthByOAuth",
        "title": "Auth by OAuth",
        "properties": {
          "API Insights.auth.OAuth": {
            "type": "object",
            "properties": {
              "Token URL": {
                "type": "string"
              },
              "Client ID": {
                "type": "string"
              },
              "Client Secret": {
                "type": "string"
              }
            },
            "default": {
              "Token URL": "",
              "Client ID": "",
              "Client Secret": ""
            },
            "additionalProperties": false
          }
        }
      },
      {
        "id": "API Insights Misc",
        "type": "object",
        "title": "Misc",
        "properties": {
          "API Insights.specFormat": {
            "title": "Preferred file format of OpenAPI Specification(OAS)",
            "markdownDescription": "Preferred file format when working with OpenAPI Specification",
            "scope": "resource",
            "type": "string",
            "enum": [
              "json",
              "yaml"
            ],
            "order": 14,
            "default": "json",
            "readOnly": true
          }
        }
      }
    ]
  },
  "main": "./dist/extension.js",
  "browser": "./dist/web/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "concurrently \"cd ./src/webviews && ./node_modules/.bin/tailwindcss -i tailwind.css -o ./tailwind.dist.css && webpack --mode development --config ../../webpack/webpack.config.js\" \"webpack --config ./webpack/extension.webpack.config.js\" \"npm run compile-web\"",
    "watch": "concurrently \"cd ./src/webviews && ./node_modules/.bin/tailwindcss -i tailwind.css -o ./tailwind.dist.css --watch \" \"cd ./src/webviews && webpack --watch --mode development --config ../../webpack/webpack.config.js\" \"webpack --watch --config ./webpack/extension.webpack.config.js\" \"npm run watch-web\"",
    "package": "concurrently \"cd ./src/webviews && webpack --mode production --config ../../webpack/webpack.config.js\" \"webpack --mode production --config ./webpack/extension.webpack.config.js\" \"npm run compile-web\"",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "lint:extension": "eslint .",
    "lint:webviews": "cd src/webviews && eslint .",
    "lint": "npm run lint:extension && npm run lint:webviews",
    "postinstall": "npm run install:webviews",
    "install:webviews": "cd src/webviews && npm install",
    "watchWithWebviewsTest": "concurrently \" npm run watch \" \"npm run test:webviews \" ",
    "watchWithExtensionTest": "concurrently \" npm run watch \" \"npm run test:extension \" ",
    "test:extension": "jest --watch",
    "test:webviews": "cd src/webviews && npm run test",
    "compile-web": "webpack --mode production --config ./webpack/extension-web.webpack.config.js",
    "watch-web": "webpack --config ./webpack/extension-web.webpack.config.js --watch",
    "test": "concurrently \"npm run test:extension \" \" npm run test:webviews\" "
  },
  "devDependencies": {
    "@babel/core": "^7.19.3",
    "@babel/preset-env": "^7.19.3",
    "@babel/preset-typescript": "^7.18.6",
    "@stoplight/spectral-core": "^1.12.1",
    "@types/jest": "^29.1.2",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.182",
    "@types/node": "^12.20.36",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "5",
    "@typescript-eslint/parser": "5",
    "axios": "^0.27.2",
    "babel-jest": "^29.1.0",
    "buffer": "^6.0.3",
    "concurrently": "^6.0.1",
    "copy-webpack-plugin": "^11.0.0",
    "eslint": "8",
    "eslint-config-airbnb": "^19",
    "eslint-import-resolver-typescript": "3",
    "eslint-plugin-import": "2",
    "eslint-plugin-jsdoc": "^32.3.0",
    "eslint-plugin-jsx-a11y": "^6.6.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-react": "^7.31.7",
    "jest": "^29.1.1",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "ts-loader": "^8.1.0",
    "ts-node": "^10.9.1",
    "tsutils": "^3.21.0",
    "typescript": "^4.3.2",
    "webpack": "^5.10.0",
    "webpack-cli": "^4.2.0",
    "webpack-node-externals": "^3.0.0",
    "yaml": "^2.1.0"
  },
  "dependencies": {
    "@cisco-developer/api-insights-openapi-rulesets": "0.0.9",
    "@reduxjs/toolkit": "^1.8.2",
    "@stoplight/json": "^3.20.1",
    "@stoplight/spectral-rulesets": "^1.8.0",
    "@vscode/codicons": "^0.0.29",
    "axios-cache-interceptor": "^0.10.7",
    "process": "^0.11.10",
    "querystring": "^0.2.1",
    "vscode-uri": "^3.0.6"
  }
}
